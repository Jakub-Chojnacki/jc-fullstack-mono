// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum QuantityUnit {
  GRAMS
  LITERS
  MILLILITERS
  PIECES
  UNITS
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String  @unique
  hash     String
  hashedRt String?
  name     String?

  ingredients             Ingredient[]
  recipes                 Recipe[]
  scheduledMeals          ScheduledMeal[]
  shoppingListIngredients ShoppingListIngredient[]

  @@map("users")
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  isGlobal  Boolean @default(false)
  isDeleted Boolean @default(false)
  imageUrl    String? 

  recipeIngredients      RecipeIngredient[]
  shoppingListIngredient ShoppingListIngredient[]

  @@map("ingredients")
}

model RecipeIngredient {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  amount   Float
  unit     QuantityUnit
  isGlobal Boolean      @default(false)

  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId Int

  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  @@unique([recipeId, ingredientId])
}

model Recipe {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  isGlobal    Boolean @default(false)
  isDeleted   Boolean @default(false)
  imageUrl    String? 

  userId            Int
  user              User               @relation(fields: [userId], references: [id])
  scheduledMeals    ScheduledMeal[]
  recipeIngredients RecipeIngredient[]
  mealTypes         MealType[] 

  @@map("recipes")
}

model ScheduledMeal {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  mealType    MealType? @default(DINNER)
  scheduledAt DateTime

  recipeId Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])

  @@map("scheduled_meals")
}

model ShoppingListIngredient {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  amount    Float
  unit      QuantityUnit
  isDone    Boolean      @default(false)

  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@unique([userId, ingredientId, unit])
}
